stop("Error: The information of data is not enough.")}
if (detail == T) basicAbuncat(data, k)
ChaoSpeciesOnline(Birds, "abundance")
data
data <- as.numeric(data)
x <- data[which(data != 0)]
n <- sum(x)
D <- length(x)
n_rare <- sum(x[which(x <= k)])
D_rare <- length(x[which(x <= k)])
if (n_rare != 0){
C_rare <- 1 - f(1, x)/n_rare
} else {
C_rare = 1
}
n_abun <- n - n_rare
D_abun <- length(x[which(x > k)])
j <- c(1:k)
a1 <- sum(sapply(j, function(j)j*(j - 1)*f(j, x)))
a2 <- sum(sapply(j, function(j)j*f(j, x)))
if (C_rare != 0){
gamma_rare_hat_square <- max(D_rare/C_rare*a1/a2/(a2 - 1) - 1, 0)
gamma_rare_1_square <- max(gamma_rare_hat_square*(1 + (1 - C_rare)/C_rare*a1/(a2 - 1)), 0)
}else{
gamma_rare_hat_square <- 0
gamma_rare_1_square <- 0
}
CV_rare <- sqrt(gamma_rare_hat_square)
CV1_rare <- sqrt(gamma_rare_1_square)
f <- function(i, data){length(data[which(data == i)])}
r <- c(1:k)
rsg <- matrix(sapply(r, function(r)f(r, x)), 1, k)
cat("(1) BASIC DATA INFORMATION  \n ", fill = TRUE)
cat("             (Number of observed individuals)  n ", sep = " = ", n, fill = TRUE)
cat("             (Number of observed species)      D ", sep = " = ", D, fill = TRUE)
cat("             (Cut-off point)                   k ", sep = "  = ", k, fill = TRUE)
cat("\n", fill = TRUE)
cat("   \"Rare\" Shared Species Group: (Frequencies counts up to cut-off point k)", fill = TRUE)
cat("          Some Statistics:", fill = TRUE)
cat("          ---------------------------------------------------------------------", fill = TRUE)
cat("         ", paste("f1 =", rsg[1], "; ","f2 =", rsg[2], "; ",
"f3 =", rsg[3], "; ","f4 =", rsg[4], "; ",
"f5 =", rsg[5], "; ","f6 =", rsg[6], "; ",
"f7 =", rsg[7], "; ","f8 =", rsg[8], "; ",
"f9 =", rsg[9], "; ","f10 =", rsg[10]), fill = TRUE)
cat("          ---------------------------------------------------------------------", fill = TRUE)
cat("               (Number of observed individuals for rare species)      n_rare",  sep = " = ", n_rare, fill = TRUE)
cat("               (Number of observed species for rare species)          D_rare",  sep = " = ", D_rare, fill = TRUE)
cat("               (Estimation of the sample converage for rare species)  C_rare" , sep = " = ", C_rare, fill = TRUE)
cat("               (Estimation of CV for rare species in ACE)             CV_rare", sep = " = ", CV_rare, fill = TRUE)
cat("               (Estimation of CV1 for rare species in ACE-1)          CV1_rare", sep = " = ", CV1_rare, fill = TRUE)
cat("\n", fill = TRUE)
cat("   \"Abundant\" Species Group: (Frequencies beyond the cut-off point) ", fill = TRUE)
cat("               (Number of observed individuals for abundant species)      n_abun",  sep = " = ", n_abun, fill = TRUE)
cat("               (Number of observed species for abundant species)          D_abun",  sep = " = ", D_abun, fill = TRUE)
cat("\n", fill = TRUE)
source('C:/Users/USER/Dropbox/CHAO/[package]ChaoSpecies/GithubChaoSpeciesOnline/ChaoSpeciesOnline/R/basicAbuncat.R', echo=TRUE)
source('C:/Users/USER/Dropbox/CHAO/[package]ChaoSpecies/GithubChaoSpeciesOnline/ChaoSpeciesOnline/R/ChaoSpecies.R', echo=TRUE)
ChaoSpeciesOnline(Birds, "abundance")
source('~/.active-rstudio-document', echo=TRUE)
source('C:/Users/USER/Dropbox/CHAO/[package]ChaoSpecies/GithubChaoSpeciesOnline/ChaoSpeciesOnline/R/basicAbuncat.R', echo=TRUE)
require(ChaoSpeciesOnline)
ChaoSpeciesOnline(Birds, "abundance")
ChaoSpeciesOnline(Birds, "abundance")
source('C:/Users/USER/Dropbox/CHAO/[package]ChaoSpecies/GithubChaoSpeciesOnline/ChaoSpeciesOnline/R/basicAbuncat.R', echo=TRUE)
ChaoSpeciesOnline(Birds, "abundance")
basicAbuncat <- function(data, k){
data <- as.numeric(data)
x <- data[which(data != 0)]
n <- sum(x)
D <- length(x)
n_rare <- sum(x[which(x <= k)])
D_rare <- length(x[which(x <= k)])
f <- function(i, data){length(data[which(data == i)])}
if (n_rare != 0){
C_rare <- 1 - f(1, x)/n_rare
} else {
C_rare = 1
}
n_abun <- n - n_rare
D_abun <- length(x[which(x > k)])
j <- c(1:k)
a1 <- sum(sapply(j, function(j)j*(j - 1)*f(j, x)))
a2 <- sum(sapply(j, function(j)j*f(j, x)))
if (C_rare != 0){
gamma_rare_hat_square <- max(D_rare/C_rare*a1/a2/(a2 - 1) - 1, 0)
gamma_rare_1_square <- max(gamma_rare_hat_square*(1 + (1 - C_rare)/C_rare*a1/(a2 - 1)), 0)
}else{
gamma_rare_hat_square <- 0
gamma_rare_1_square <- 0
}
CV_rare <- sqrt(gamma_rare_hat_square)
CV1_rare <- sqrt(gamma_rare_1_square)
r <- c(1:k)
rsg <- matrix(sapply(r, function(r)f(r, x)), 1, k)
cat("(1) BASIC DATA INFORMATION  \n ", fill = TRUE)
cat("             (Number of observed individuals)  n ", sep = " = ", n, fill = TRUE)
cat("             (Number of observed species)      D ", sep = " = ", D, fill = TRUE)
cat("             (Cut-off point)                   k ", sep = "  = ", k, fill = TRUE)
cat("\n", fill = TRUE)
cat("   \"Rare\" Shared Species Group: (Frequencies counts up to cut-off point k)", fill = TRUE)
cat("          Some Statistics:", fill = TRUE)
cat("          ---------------------------------------------------------------------", fill = TRUE)
cat("         ", paste("f1 =", rsg[1], "; ","f2 =", rsg[2], "; ",
"f3 =", rsg[3], "; ","f4 =", rsg[4], "; ",
"f5 =", rsg[5], "; ","f6 =", rsg[6], "; ",
"f7 =", rsg[7], "; ","f8 =", rsg[8], "; ",
"f9 =", rsg[9], "; ","f10 =", rsg[10]), fill = TRUE)
cat("          ---------------------------------------------------------------------", fill = TRUE)
cat("               (Number of observed individuals for rare species)      n_rare",  sep = " = ", n_rare, fill = TRUE)
cat("               (Number of observed species for rare species)          D_rare",  sep = " = ", D_rare, fill = TRUE)
cat("               (Estimation of the sample converage for rare species)  C_rare" , sep = " = ", C_rare, fill = TRUE)
cat("               (Estimation of CV for rare species in ACE)             CV_rare", sep = " = ", CV_rare, fill = TRUE)
cat("               (Estimation of CV1 for rare species in ACE-1)          CV1_rare", sep = " = ", CV1_rare, fill = TRUE)
cat("\n", fill = TRUE)
cat("   \"Abundant\" Species Group: (Frequencies beyond the cut-off point) ", fill = TRUE)
cat("               (Number of observed individuals for abundant species)      n_abun",  sep = " = ", n_abun, fill = TRUE)
cat("               (Number of observed species for abundant species)          D_abun",  sep = " = ", D_abun, fill = TRUE)
cat("\n", fill = TRUE)
}
ChaoSpeciesOnline(Birds, "abundance")
source('C:/Users/USER/Dropbox/CHAO/[package]ChaoSpecies/GithubChaoSpeciesOnline/ChaoSpeciesOnline/R/ChaoSpecies.R', echo=TRUE)
ChaoSpeciesOnline(Birds, "abundance")
ChaoSpeciesOnline <-
function(data, datatype = c("abundance", "incidence"), method = c("all", "Homogeneous", "Chao", "CE", "Jackknife"),
k = 10, conf = 0.95, detail = c("TRUE", "FALSE")){
method <- match.arg(method)
if (k != round(k) || k < 0)
stop("Error: The cutoff t to define less abundant species must be non-negative integer!")
if (is.numeric(conf) == FALSE || conf > 1 || conf < 0)
stop("Error: confidence level must be a numerical value between 0 and 1, e.g. 0.95")
if (is.matrix(data) == T || is.data.frame(data) == T){
if (ncol(data) != 1 & nrow(data) != 1)
stop("Error: The data format is wrong.")
if (ncol(data) == 1){
data <- data[, 1]
} else {
data <- data[1, ]
}
}
data <- as.numeric(round(data))
if (datatype == "abundance"){
f <- function(i, data){length(data[which(data == i)])}
if (f(1, data) == sum(data)){
stop("Error: The information of data is not enough.")}
if (detail == T) basicAbuncat(data, k)
SpeciesAbundance(data, method = method, k = k, conf = conf)
} else {
dat <- data[-1]; Q <- function(i, data){length(data[which(data == i)])}
if (Q(1, dat) == sum(dat)){
stop("Error: The information of data is not enough.")}
if (detail == T) basicIncicat(data, k)
SpeciesIncidence(data, method = method, k = k, conf = conf)
}
}
ChaoSpeciesOnline(Birds, "abundance")
if (detail == T) basicIncicat(data, k)
if (detail == T) basicAbuncat(data, k)
detail == T
mean
getAnywhere(mean)
getAnywhere(mean.default)
ChaoSpeciesOnline <-
function(data, datatype = c("abundance", "incidence"), method = c("all", "Homogeneous", "Chao", "CE", "Jackknife"),
k = 10, conf = 0.95, detail = TRUE){
method <- match.arg(method)
if (k != round(k) || k < 0)
stop("Error: The cutoff t to define less abundant species must be non-negative integer!")
if (is.numeric(conf) == FALSE || conf > 1 || conf < 0)
stop("Error: confidence level must be a numerical value between 0 and 1, e.g. 0.95")
if (is.matrix(data) == T || is.data.frame(data) == T){
if (ncol(data) != 1 & nrow(data) != 1)
stop("Error: The data format is wrong.")
if (ncol(data) == 1){
data <- data[, 1]
} else {
data <- data[1, ]
}
}
data <- as.numeric(round(data))
if (datatype == "abundance"){
f <- function(i, data){length(data[which(data == i)])}
if (f(1, data) == sum(data)){
stop("Error: The information of data is not enough.")}
if (detail == T) basicAbuncat(data, k)
SpeciesAbundance(data, method = method, k = k, conf = conf)
} else {
dat <- data[-1]; Q <- function(i, data){length(data[which(data == i)])}
if (Q(1, dat) == sum(dat)){
stop("Error: The information of data is not enough.")}
if (detail == T) basicIncicat(data, k)
SpeciesIncidence(data, method = method, k = k, conf = conf)
}
}
ChaoSpeciesOnline(Birds, "abundance")
getAnywhere(mean.default)
ChaoSpeciesOnline(Birds, "abundance")
basicAbuncat(Birds, 10)
Birds
basicAbuncat(t(Birds), 10)
Coin
basicAbuncat(Coin, 10)
source('C:/Users/USER/Dropbox/CHAO/[package]ChaoSpecies/GithubChaoSpeciesOnline/ChaoSpeciesOnline/R/basicAbuncat.R', echo=TRUE)
basicAbuncat(Birds, 10)
library(devtools)
install_github('ChaoSpeciesOnline','ddd7975')
library(ChaoSpeciesOnline)
#?ChaoSpecies
library(knitr)
library(shiny)
runApp("ChaoSpeciesApp_test")
install_github('ChaoSpeciesOnline','ddd7975')
library(ChaoSpeciesOnline)
#?ChaoSpecies
library(knitr)
library(shiny)
runApp("ChaoSpeciesApp_test")
remove.packages("ChaoSpecies")
library(devtools)
install_github('ChaoSpeciesOnline','ddd7975')
library(ChaoSpeciesOnline)
#?ChaoSpecies
library(knitr)
library(shiny)
runApp("ChaoSpeciesApp_test")
library(devtools)
install_github('ChaoSpeciesOnline','ddd7975')
library(ChaoSpeciesOnline)
#?ChaoSpecies
library(knitr)
library(shiny)
runApp("ChaoSpeciesApp_test")
library(devtools)
install_github('ChaoSpeciesOnline','ddd7975')
library(ChaoSpeciesOnline)
#?ChaoSpecies
library(knitr)
library(shiny)
runApp("ChaoSpeciesApp_test")
detach("package:ChaoSpeciesOnline", unload=TRUE)
remove.packages("ChaoSpeciesOnline")
library(devtools)
install_github('ChaoSpeciesOnline','ddd7975')
library(ChaoSpeciesOnline)
#?ChaoSpecies
library(knitr)
library(shiny)
runApp("ChaoSpeciesApp_test")
library(devtools)
install_github('ChaoSpeciesOnline','ddd7975')
library(devtools)
install_github('ChaoSpeciesOnline','ddd7975')
library(ChaoSpeciesOnline)
#?ChaoSpecies
library(knitr)
library(shiny)
runApp("ChaoSpeciesApp_test")
library(devtools)
install_github('ChaoSpeciesOnline','ddd7975')
library(ChaoSpeciesOnline)
#?ChaoSpecies
library(knitr)
library(shiny)
runApp("ChaoSpeciesApp_test")
runApp("ChaoSpeciesApp_test")
library(devtools)
install_github('ChaoSpeciesOnline','ddd7975')
library(ChaoSpeciesOnline)
#?ChaoSpecies
library(knitr)
library(shiny)
runApp("ChaoSpeciesApp_test")
library(devtools)
install_github('ChaoSpeciesOnline','ddd7975')
library(ChaoSpeciesOnline)
#?ChaoSpecies
library(knitr)
library(shiny)
runApp("ChaoSpeciesApp_test")
library(devtools)
install_github('ChaoSpeciesOnline','ddd7975')
library(ChaoSpeciesOnline)
#?ChaoSpecies
library(knitr)
library(shiny)
runApp("ChaoSpeciesApp_test")
library(devtools)
install_github('ChaoSpeciesOnline','ddd7975')
library(ChaoSpeciesOnline)
#?ChaoSpecies
library(knitr)
library(shiny)
runApp("ChaoSpeciesApp_test")
library(devtools)
install_github('ChaoSpeciesOnline','ddd7975')
library(ChaoSpeciesOnline)
#?ChaoSpecies
library(knitr)
library(shiny)
runApp("ChaoSpeciesApp_test")
library(devtools)
install_github('ChaoSpeciesOnline','ddd7975')
library(ChaoSpeciesOnline)
#?ChaoSpecies
library(knitr)
library(shiny)
runApp("ChaoSpeciesApp_test")
library(devtools)
install_github('ChaoSpeciesOnline','ddd7975')
library(ChaoSpeciesOnline)
#?ChaoSpecies
library(knitr)
library(shiny)
runApp("ChaoSpeciesApp_test")
library(devtools)
install_github('ChaoSpeciesOnline','ddd7975')
library(ChaoSpeciesOnline)
#?ChaoSpecies
library(knitr)
library(shiny)
runApp("ChaoSpeciesApp_test")
library(devtools)
install_github('ChaoSpeciesOnline','ddd7975')
library(ChaoSpeciesOnline)
#?ChaoSpecies
library(knitr)
library(shiny)
runApp("ChaoSpeciesApp_test")
library(devtools)
install_github('ChaoSpeciesOnline','ddd7975')
library(ChaoSpeciesOnline)
#?ChaoSpecies
library(knitr)
library(shiny)
runApp("ChaoSpeciesApp_test")
library(devtools)
install_github('ChaoSpeciesOnline','ddd7975')
library(ChaoSpeciesOnline)
#?ChaoSpecies
library(knitr)
library(shiny)
runApp("ChaoSpeciesApp_test")
library(devtools)
install_github('ChaoSpeciesOnline','ddd7975')
library(ChaoSpeciesOnline)
#?ChaoSpecies
library(knitr)
library(shiny)
runApp("ChaoSpeciesApp_test")
library(devtools)
install_github('ChaoSpeciesOnline','ddd7975')
library(ChaoSpeciesOnline)
#?ChaoSpecies
library(knitr)
library(shiny)
runApp("ChaoSpeciesApp_test")
library(devtools)
install_github('ChaoSpeciesOnline','ddd7975')
library(ChaoSpeciesOnline)
#?ChaoSpecies
library(knitr)
library(shiny)
runApp("ChaoSpeciesApp_test")
source('~/.active-rstudio-document', echo=TRUE)
data <- Coin
library(devtools)
install_github('ChaoSpeciesOnline','ddd7975')
library(ChaoSpeciesOnline)
data(Spider)
data(Seedlings_Pre)
data(Ant)
data(Birds)
data(Coin)
data(Spider)
data(Seedlings_Pre)
data(Seedlings_Freq)
data(Seedlings_Counts)
Coin <- DataTransform(Coin, "FreqCount")
Seedlings_Pre <- DataTransform(Seedlings_Pre, "MatrixInci")
Seedlings_Freq <- DataTransform(Seedlings_Freq, "MatrixAbun")
Seedlings_Counts <- DataTransform(Seedlings_Counts, "InciCount")
data <- Coin
data <- as.numeric(data)
#method <- match.arg(method, several.ok=T)
ind <- pmatch(method, c("Homogeneous", "Chao", "CE", "Jackknife"))
method = c("Chao", "CE")
ind <- pmatch(method, c("Homogeneous", "Chao", "CE", "Jackknife"))
ind
method = c("Chao", "Homo")
ind <- pmatch(method, c("Homogeneous", "Chao", "CE", "Jackknife"))
ind
Homo <- round(rbind(SpecAbunHomo(data, k, conf), SpecAbunHomoMle(data, k, conf)),3)
Chao <- round(rbind(SpecAbunChao1(data, k, conf), SpecAbunChao1bc(data, k, conf),
SpecAbuniChao1(data, k, conf)),3)
CE <- round(rbind(SpecAbunAce(data, k, conf), SpecAbunAce1(data, k, conf)),3)
Jackknife <- round(rbind(SpecAbunJack1(data, k, conf), SpecAbunJack2(data, k, conf)),3)
sum(method == "all") != 0
setwd("C:/Users/USER/Dropbox/CHAO/[package]ChaoSpecies/GithubChaoSpeciesOnline/ChaoSpeciesOnline/R")
source("basicAbuncat.R")
source("basicIncicat.R")
source("ChaoSpecies.R")
source("f.R")
source("Q.R")
source("RareSpeciesGroup.R")
source("SpecAbunAce.R")
source("SpecAbunAce1.R")
source("SpecAbunChao1.R")
source("SpecAbunChao1bc.R")
source("SpecAbuniChao1.R")
source("SpecAbunHomo.R")
source("SpecAbunHomoMle.R")
source("SpecAbunJack1.R")
source("SpecAbunJack2.R")
source("SpecAbunOut.R")
source("SpeciesAbundance.R")
source("SpeciesIncidence.R")
source("SpecInciChao2.R")
source("SpecInciChao2bc.R")
source("SpecInciHomo.R")
source("SpecInciJack1.R")
source("SpecInciJack2.R")
source("SpecInciModelh.R")
source("SpecInciModelh1.R")
source("SpecInciModelth.R")
source("SpecInciModelth1.R")
source("SpecInciOut.R")
source("DataTransform.R")
data
data <- as.numeric(data)
#method <- match.arg(method, several.ok=T)
ind <- pmatch(method, c("Homogeneous", "Chao", "CE", "Jackknife"))
Homo <- round(rbind(SpecAbunHomo(data, k, conf), SpecAbunHomoMle(data, k, conf)),3)
Chao <- round(rbind(SpecAbunChao1(data, k, conf), SpecAbunChao1bc(data, k, conf),
SpecAbuniChao1(data, k, conf)),3)
conf=0.91
conf=0.95
data <- as.numeric(data)
#method <- match.arg(method, several.ok=T)
ind <- pmatch(method, c("Homogeneous", "Chao", "CE", "Jackknife"))
Homo <- round(rbind(SpecAbunHomo(data, k, conf), SpecAbunHomoMle(data, k, conf)),3)
Chao <- round(rbind(SpecAbunChao1(data, k, conf), SpecAbunChao1bc(data, k, conf),
SpecAbuniChao1(data, k, conf)),3)
CE <- round(rbind(SpecAbunAce(data, k, conf), SpecAbunAce1(data, k, conf)),3)
Jackknife <- round(rbind(SpecAbunJack1(data, k, conf), SpecAbunJack2(data, k, conf)),3)
tmp1 <- rbind(Homo, Chao, CE, Jackknife)
tmp2 <- list(Homo, Chao, CE, Jackknife)
data <- as.numeric(data)
#method <- match.arg(method, several.ok=T)
ind <- pmatch(method, c("Homogeneous", "Chao", "CE", "Jackknife"))
Homo <- round(rbind(SpecAbunHomo(data, k, conf), SpecAbunHomoMle(data, k, conf)),3)
Chao <- round(rbind(SpecAbunChao1(data, k, conf), SpecAbunChao1bc(data, k, conf),
}}}}}}}}}}}}}}}
k=10
data <- as.numeric(data)
#method <- match.arg(method, several.ok=T)
ind <- pmatch(method, c("Homogeneous", "Chao", "CE", "Jackknife"))
Homo <- round(rbind(SpecAbunHomo(data, k, conf), SpecAbunHomoMle(data, k, conf)),3)
Chao <- round(rbind(SpecAbunChao1(data, k, conf), SpecAbunChao1bc(data, k, conf),
SpecAbuniChao1(data, k, conf)),3)
CE <- round(rbind(SpecAbunAce(data, k, conf), SpecAbunAce1(data, k, conf)),3)
Jackknife <- round(rbind(SpecAbunJack1(data, k, conf), SpecAbunJack2(data, k, conf)),3)
tmp1 <- rbind(Homo, Chao, CE, Jackknife)
tmp2 <- list(Homo, Chao, CE, Jackknife)
sum(method == "all") != 0
lapply(ind, function(ind)tmp2[[ind]])
do.call("rbind", lapply(ind, function(ind)tmp2[[ind]]))
data <- Seedlings_Counts
data
ind <- pmatch(method, c("Homogeneous", "Chao", "CE", "Jackknife"))
Homo <- round(SpecInciHomo(data, k, conf), 3)
Chao <- rbind(round(SpecInciChao2(data, k, conf), 3), round(SpecInciChao2bc(data, k, conf), 3),
round(SpecInciiChao2(data, k, conf), 3))
CE <- rbind(round(SpecInciModelh(data, k, conf)[[1]], 3), round(SpecInciModelh1(data, k, conf)[[1]], 3))
Jackknife <- rbind(round(SpecInciJack1(data, k, conf), 3), round(SpecInciJack2(data, k, conf), 3))
ind <- pmatch(method, c("Homogeneous", "Chao", "CE", "Jackknife"))
Homo <- round(SpecInciHomo(data, k, conf), 3)
Chao <- rbind(round(SpecInciChao2(data, k, conf), 3), round(SpecInciChao2bc(data, k, conf), 3),
round(SpecInciiChao2(data, k, conf), 3))
CE <- rbind(round(SpecInciModelh(data, k, conf)[[1]], 3), round(SpecInciModelh1(data, k, conf)[[1]], 3))
Jackknife <- rbind(round(SpecInciJack1(data, k, conf), 3), round(SpecInciJack2(data, k, conf), 3))
est.cv <- data.frame(c("", "", "", "", round(SpecInciModelh(data, k, conf)[[2]], 3),
round(SpecInciModelh1(data, k, conf)[[2]], 3), "", ""))
colnames(est.cv) <- "Est.CV(rare)"
#     est.cv_J <- matrix(c(round(SpecInciModelh(data, k, conf)[[2]], 3), round(SpecInciModelh1(data, k, conf)[[2]], 3)),
#                        nrow = 2)
est.cv_J <- c(round(SpecInciModelh(data, k, conf)[[2]], 3), round(SpecInciModelh1(data, k, conf)[[2]], 3))
tmp1 <- cbind(rbind(Homo, Chao, CE, Jackknife), est.cv)
tmp2 <- list(Homo, Chao, CE, Jackknife)
tmp2
out <- do.call("rbind", lapply(ind, function(ind)tmp2[[ind]]))
det <- which(rownames(out) == "Model(h) (ICE) (Lee & Chao, 1994)" |
rownames(out) == "Model(h)-1 (ICE-1)")
det
value.na <- matrix(rep(NA, nrow(out)), ncol = 1)
colnames(value.na) <- "Est.CV(rare)"
out <- cbind(out, value.na)
out
data(Spider)
Spider
View(Birds)
View(Spider)
library(shiny)
tags
?tags
tags$textarea
?tags$textarea
fix(Seedlings_Pre)
View(Ant)
load("C:/Users/USER/Dropbox/CHAO/[package]ChaoSpecies/GithubChaoSpecies/ChaoSpecies/data/Ant.rda")
Ant
as.numeric(Ant)
Seedlings_Pre
