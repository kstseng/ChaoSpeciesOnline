#method <- match.arg(method)
return(SPECIES.TABLE = round(SpecAbunOut(data, method, k, conf), 3))
}
ChaoSpeciesOnline <-
function(data, datatype = c("abundance", "incidence"), method = c("all", "Homogeneous", "Chao", "CE", "Jackknife"),
k = 10, conf = 0.95, detail = TRUE){
#method <- match.arg(method, several.ok=T)
if (k != round(k) || k < 0)
stop("Error: The cutoff t to define less abundant species must be non-negative integer!")
if (is.numeric(conf) == FALSE || conf > 1 || conf < 0)
stop("Error: confidence level must be a numerical value between 0 and 1, e.g. 0.95")
if (is.matrix(data) == T || is.data.frame(data) == T){
if (ncol(data) != 1 & nrow(data) != 1)
stop("Error: The data format is wrong.")
if (ncol(data) == 1){
data <- data[, 1]
} else {
data <- data[1, ]
}
}
data <- as.numeric(round(data))
if (datatype == "abundance"){
f <- function(i, data){length(data[which(data == i)])}
if (f(1, data) == sum(data)){
stop("Error: The information of data is not enough.")}
if (detail == T) basicAbuncat(data, k)
SpeciesAbundance(data, method = method, k = k, conf = conf)
} else {
dat <- data[-1]; Q <- function(i, data){length(data[which(data == i)])}
if (Q(1, dat) == sum(dat)){
stop("Error: The information of data is not enough.")}
if (detail == T) basicIncicat(data, k)
SpeciesIncidence(data, method = method, k = k, conf = conf)
}
}
ChaoSpeciesOnline(Birds, "abundance", c("Chao", "CE"), detail = F)
ChaoSpeciesOnline(Birds, "abundance", c("CE", "Jack"), detail = F)
SpeciesIncidence <-
function(data, method = c("all", "Homogeneous", "Chao", "CE", "Jackknife"), k = 10, conf = 0.95){
#  method <- match.arg(method)
return(SPECIES.TABLE = SpecInciOut(data, method, k, conf))
}
ChaoSpeciesOnline(Seedlings_Pre, "incidence", c("CE", "Jack"), detail = F)
ChaoSpeciesOnline(Seedlings_Pre, "incidence", c("CE", "Chao"), detail = F)
ChaoSpeciesOnline(Seedlings_Pre, "incidence", c("CE", "Jack"), detail = F)
ChaoSpeciesOnline(Seedlings_Pre, "incidence", c("CE", "Jackknife"), detail = F)
method
method = c("CE", "Jackknife")
sum(method == "CE") != 0
out <- do.call("rbind", lapply(ind, function(ind)tmp2[[ind]]))
out
tmp1 <- cbind(rbind(Homo, Chao, CE, Jackknife), est.cv)
tmp2 <- list(Homo, Chao, CE, Jackknife)
ind <- pmatch(method, c("Homogeneous", "Chao", "CE", "Jackknife"))
Homo <- round(SpecInciHomo(data, k, conf), 3)
Chao <- rbind(round(SpecInciChao2(data, k, conf), 3), round(SpecInciChao2bc(data, k, conf), 3),
round(SpecInciiChao2(data, k, conf), 3))
CE <- rbind(round(SpecInciModelh(data, k, conf)[[1]], 3), round(SpecInciModelh1(data, k, conf)[[1]], 3))
Jackknife <- rbind(round(SpecInciJack1(data, k, conf), 3), round(SpecInciJack2(data, k, conf), 3))
est.cv <- data.frame(c("", "", "", "", round(SpecInciModelh(data, k, conf)[[2]], 3),
round(SpecInciModelh1(data, k, conf)[[2]], 3), "", ""))
colnames(est.cv) <- "Est.CV(rare)"
#     est.cv_J <- matrix(c(round(SpecInciModelh(data, k, conf)[[2]], 3), round(SpecInciModelh1(data, k, conf)[[2]], 3)),
#                        nrow = 2)
est.cv_J <- c(round(SpecInciModelh(data, k, conf)[[2]], 3), round(SpecInciModelh1(data, k, conf)[[2]], 3))
tmp1 <- cbind(rbind(Homo, Chao, CE, Jackknife), est.cv)
tmp2 <- list(Homo, Chao, CE, Jackknife)
out <- do.call("rbind", lapply(ind, function(ind)tmp2[[ind]]))
out
det <- which(rownames(out) == "CE")
det
rownames(out)
ind <- pmatch(method, c("Homogeneous", "Chao", "CE", "Jackknife"))
Homo <- round(SpecInciHomo(data, k, conf), 3)
Chao <- rbind(round(SpecInciChao2(data, k, conf), 3), round(SpecInciChao2bc(data, k, conf), 3),
round(SpecInciiChao2(data, k, conf), 3))
CE <- rbind(round(SpecInciModelh(data, k, conf)[[1]], 3), round(SpecInciModelh1(data, k, conf)[[1]], 3))
CE
ind <- pmatch(method, c("Homogeneous", "Chao", "CE", "Jackknife"))
Homo <- round(SpecInciHomo(data, k, conf), 3)
Chao <- rbind(round(SpecInciChao2(data, k, conf), 3), round(SpecInciChao2bc(data, k, conf), 3),
round(SpecInciiChao2(data, k, conf), 3))
CE <- rbind(round(SpecInciModelh(data, k, conf)[[1]], 3), round(SpecInciModelh1(data, k, conf)[[1]], 3))
Jackknife <- rbind(round(SpecInciJack1(data, k, conf), 3), round(SpecInciJack2(data, k, conf), 3))
est.cv <- data.frame(c("", "", "", "", round(SpecInciModelh(data, k, conf)[[2]], 3),
round(SpecInciModelh1(data, k, conf)[[2]], 3), "", ""))
colnames(est.cv) <- "Est.CV(rare)"
#     est.cv_J <- matrix(c(round(SpecInciModelh(data, k, conf)[[2]], 3), round(SpecInciModelh1(data, k, conf)[[2]], 3)),
#                        nrow = 2)
est.cv_J <- c(round(SpecInciModelh(data, k, conf)[[2]], 3), round(SpecInciModelh1(data, k, conf)[[2]], 3))
tmp1 <- cbind(rbind(Homo, Chao, CE, Jackknife), est.cv)
tmp2 <- list(Homo, Chao, CE, Jackknife)
tmp2
out <- do.call("rbind", lapply(ind, function(ind)tmp2[[ind]]))
det <- which(rownames(out) == "CE")
det
sum(method == "CE") != 0
rownames(out) == "CE"
ind <- pmatch(method, c("Homogeneous", "Chao", "CE", "Jackknife"))
Homo <- round(SpecInciHomo(data, k, conf), 3)
rownames(Homo)
value.na <- matrix(rep(NA, nrow(out)), ncol = 1)
value.na
value.na <- matrix(rep(NA, nrow(out)), ncol = 1)
colnames(value.na) <- "Est.CV(rare)"
out <- cbind(out, value.na)
out
rownames(out)
ind
method
ind
ind <- pmatch(method, c("Homogeneous", "Chao", "CE", "Jackknife"))
ind
Homo <- round(SpecInciHomo(data, k, conf), 3)
Chao <- rbind(round(SpecInciChao2(data, k, conf), 3), round(SpecInciChao2bc(data, k, conf), 3),
round(SpecInciiChao2(data, k, conf), 3))
CE <- rbind(round(SpecInciModelh(data, k, conf)[[1]], 3), round(SpecInciModelh1(data, k, conf)[[1]], 3))
Jackknife <- rbind(round(SpecInciJack1(data, k, conf), 3), round(SpecInciJack2(data, k, conf), 3))
est.cv <- data.frame(c("", "", "", "", round(SpecInciModelh(data, k, conf)[[2]], 3),
round(SpecInciModelh1(data, k, conf)[[2]], 3), "", ""))
colnames(est.cv) <- "Est.CV(rare)"
#     est.cv_J <- matrix(c(round(SpecInciModelh(data, k, conf)[[2]], 3), round(SpecInciModelh1(data, k, conf)[[2]], 3)),
#                        nrow = 2)
est.cv_J <- c(round(SpecInciModelh(data, k, conf)[[2]], 3), round(SpecInciModelh1(data, k, conf)[[2]], 3))
tmp1 <- cbind(rbind(Homo, Chao, CE, Jackknife), est.cv)
tmp2 <- list(Homo, Chao, CE, Jackknife)
sum(method == "all") != 0
sum(method == "CE") != 0
out <- do.call("rbind", lapply(ind, function(ind)tmp2[[ind]]))
out
do.call("rbind", lapply(ind, function(ind)tmp2[[ind]]))
det <- which(rownames(out) == "CE")
det
det <- which(rownames(out) == "ICE")
det
rownames(out)
det <- which(rownames(out) == "Model(h) (ICE) (Lee & Chao, 1994)" |
rownames(out) == "Model(h) (ICE) (Lee & Chao, 1994)")
det
det <- which(rownames(out) == "Model(h) (ICE) (Lee & Chao, 1994)" |
rownames(out) == "Model(h)-1 (ICE-1)")
det
value.na <- matrix(rep(NA, nrow(out)), ncol = 1)
colnames(value.na) <- "Est.CV(rare)"
out <- cbind(out, value.na)
out[det, 5] = est.cv_J
out
SpecInciOut <-
function(data, method = c("all", "Homogeneous", "Chao", "CE", "Jackknife"), k, conf){
ind <- pmatch(method, c("Homogeneous", "Chao", "CE", "Jackknife"))
Homo <- round(SpecInciHomo(data, k, conf), 3)
Chao <- rbind(round(SpecInciChao2(data, k, conf), 3), round(SpecInciChao2bc(data, k, conf), 3),
round(SpecInciiChao2(data, k, conf), 3))
CE <- rbind(round(SpecInciModelh(data, k, conf)[[1]], 3), round(SpecInciModelh1(data, k, conf)[[1]], 3))
Jackknife <- rbind(round(SpecInciJack1(data, k, conf), 3), round(SpecInciJack2(data, k, conf), 3))
est.cv <- data.frame(c("", "", "", "", round(SpecInciModelh(data, k, conf)[[2]], 3),
round(SpecInciModelh1(data, k, conf)[[2]], 3), "", ""))
colnames(est.cv) <- "Est.CV(rare)"
#     est.cv_J <- matrix(c(round(SpecInciModelh(data, k, conf)[[2]], 3), round(SpecInciModelh1(data, k, conf)[[2]], 3)),
#                        nrow = 2)
est.cv_J <- c(round(SpecInciModelh(data, k, conf)[[2]], 3), round(SpecInciModelh1(data, k, conf)[[2]], 3))
tmp1 <- cbind(rbind(Homo, Chao, CE, Jackknife), est.cv)
tmp2 <- list(Homo, Chao, CE, Jackknife)
if (sum(method == "all") != 0){ #if "all" in method
out <- tmp1
}else if (sum(method == "CE") != 0){
out <- do.call("rbind", lapply(ind, function(ind)tmp2[[ind]]))
det <- which(rownames(out) == "Model(h) (ICE) (Lee & Chao, 1994)" |
rownames(out) == "Model(h)-1 (ICE-1)")
value.na <- matrix(rep(NA, nrow(out)), ncol = 1)
colnames(value.na) <- "Est.CV(rare)"
out <- cbind(out, value.na)
out[det, 5] = est.cv_J
}else{
out <- do.call("rbind", lapply(ind, function(ind)tmp2[[ind]]))
}
return(out)
}
SpecInciOut(Seedlings_Pre, c("CE", "Chao"), 10, 0.95)
SpecInciOut(Seedlings_Pre, "CE", 10, 0.95)
ChaoSpeciesOnline(Birds, "abundance", Null)
ChaoSpeciesOnline(Birds, "abundance", c("Null"))
method
RareSpeciesGroup <- function(data, k){
data <- as.numeric(data)
f <- function(i, data){length(data[which(data == i)])}
x <- data[which(data != 0)]
r <- c(1:k)
Rare.Species.Group <- matrix(sapply(r, function(r)f(r, x)), 1, k)
rownames(Rare.Species.Group) <- c("f(i)")
colnames(Rare.Species.Group) <- c(1:k)
return(Rare.Species.Group)
}
RareSpeciesGroup(Birds, 10)
RareSpeciesGroup(Coin, 10)
data = Coin
data <- as.numeric(data)
x <- data[which(data != 0)]
n <- sum(x)
D <- length(x)
n_rare <- sum(x[which(x <= k)])
D_rare <- length(x[which(x <= k)])
if (n_rare != 0){
C_rare <- 1 - f(1, x)/n_rare
} else {
C_rare = 1
}
n_abun <- n - n_rare
D_abun <- length(x[which(x > k)])
j <- c(1:k)
a1 <- sum(sapply(j, function(j)j*(j - 1)*f(j, x)))
a2 <- sum(sapply(j, function(j)j*f(j, x)))
if (C_rare != 0){
gamma_rare_hat_square <- max(D_rare/C_rare*a1/a2/(a2 - 1) - 1, 0)
gamma_rare_1_square <- max(gamma_rare_hat_square*(1 + (1 - C_rare)/C_rare*a1/(a2 - 1)), 0)
data <- as.numeric(data)
x <- data[which(data != 0)]
x
}}}}}}}
data <- as.numeric(data)
data
x <- data[which(data != 0)]
n <- sum(x)
D <- length(x)
n_rare <- sum(x[which(x <= k)])
D_rare <- length(x[which(x <= k)])
if (n_rare != 0){
C_rare <- 1 - f(1, x)/n_rare
} else {
C_rare = 1
}
n_abun <- n - n_rare
D_abun <- length(x[which(x > k)])
j <- c(1:k)
a1 <- sum(sapply(j, function(j)j*(j - 1)*f(j, x)))
f
j <- c(1:k)
f <- function(i, data){length(data[which(data == i)])}
a1 <- sum(sapply(j, function(j)j*(j - 1)*f(j, x)))
a2 <- sum(sapply(j, function(j)j*f(j, x)))
if (C_rare != 0){
gamma_rare_hat_square <- max(D_rare/C_rare*a1/a2/(a2 - 1) - 1, 0)
gamma_rare_1_square <- max(gamma_rare_hat_square*(1 + (1 - C_rare)/C_rare*a1/(a2 - 1)), 0)
}else{
gamma_rare_hat_square <- 0
gamma_rare_1_square <- 0
}
CV_rare <- sqrt(gamma_rare_hat_square)
data <- as.numeric(data)
x <- data[which(data != 0)]
n <- sum(x)
D <- length(x)
n_rare <- sum(x[which(x <= k)])
D_rare <- length(x[which(x <= k)])
if (n_rare != 0){
C_rare <- 1 - f(1, x)/n_rare
} else {
C_rare = 1
}
n_abun <- n - n_rare
D_abun <- length(x[which(x > k)])
j <- c(1:k)
f <- function(i, data){length(data[which(data == i)])}
a1 <- sum(sapply(j, function(j)j*(j - 1)*f(j, x)))
a2 <- sum(sapply(j, function(j)j*f(j, x)))
C_rare
if (C_rare != 0){
gamma_rare_hat_square <- max(D_rare/C_rare*a1/a2/(a2 - 1) - 1, 0)
gamma_rare_1_square <- max(gamma_rare_hat_square*(1 + (1 - C_rare)/C_rare*a1/(a2 - 1)), 0)
}else{
gamma_rare_hat_square <- 0
gamma_rare_1_square <- 0
}
CV_rare <- sqrt(gamma_rare_hat_square)
CV1_rare <- sqrt(gamma_rare_1_square)
BASIC.DATA <- matrix(paste(c("n", "D", "k", "n_rare", "D_rare", "C_rare", "CV_rare", "CV1_rare", "n_abun", "D_abun"),
round(c(n, D, k, n_rare, D_rare, C_rare, CV_rare, CV1_rare, n_abun, D_abun),3),
sep = "="), ncol = 1)
colnames(BASIC.DATA) <- c("Value")
rownames(BASIC.DATA) <- c("Number of observed individuals", "Number of observed species","Cut-off point",
"Number of observed in dividuals for rare species", "Number of observed species for rare species",
"Estimation of the sample converage for rare species",
"Estimation of CV for rare species in ACE", "Estimation of CV1 for rare species in ACE-1",
"Number of observed individuals for abundant species", "Number of observed species for abundant species")
BASIC.DATA <- data.frame(BASIC.DATA)
BASIC.DATA
ChaoSpeciesOnline <-
function(data, datatype = c("abundance", "incidence"), method = c("all", "Homogeneous", "Chao", "CE", "Jackknife"),
k = 10, conf = 0.95, detail = TRUE){
if (method = "Null")
stop("Error: You havn't choose the method!")
#method <- match.arg(method, several.ok=T)
if (k != round(k) || k < 0)
stop("Error: The cutoff t to define less abundant species must be non-negative integer!")
if (is.numeric(conf) == FALSE || conf > 1 || conf < 0)
stop("Error: confidence level must be a numerical value between 0 and 1, e.g. 0.95")
if (is.matrix(data) == T || is.data.frame(data) == T){
if (ncol(data) != 1 & nrow(data) != 1)
stop("Error: The data format is wrong.")
if (ncol(data) == 1){
data <- data[, 1]
} else {
data <- data[1, ]
}
}
data <- as.numeric(round(data))
if (datatype == "abundance"){
f <- function(i, data){length(data[which(data == i)])}
if (f(1, data) == sum(data)){
stop("Error: The information of data is not enough.")}
if (detail == T) basicAbuncat(data, k)
SpeciesAbundance(data, method = method, k = k, conf = conf)
} else {
dat <- data[-1]; Q <- function(i, data){length(data[which(data == i)])}
if (Q(1, dat) == sum(dat)){
stop("Error: The information of data is not enough.")}
if (detail == T) basicIncicat(data, k)
SpeciesIncidence(data, method = method, k = k, conf = conf)
}
}
ChaoSpeciesOnline <-
function(data, datatype = c("abundance", "incidence"), method = c("all", "Homogeneous", "Chao", "CE", "Jackknife"),
k = 10, conf = 0.95, detail = TRUE){
if (method = "Null")
stop("Error: You havn't choose the method!")
#method <- match.arg(method, several.ok=T)
ChaoSpeciesOnline <-
function(data, datatype = c("abundance", "incidence"), method = c("all", "Homogeneous", "Chao", "CE", "Jackknife"),
k = 10, conf = 0.95, detail = TRUE){
if (method == "Null")
stop("Error: You havn't choose the method!")
#method <- match.arg(method, several.ok=T)
if (k != round(k) || k < 0)
stop("Error: The cutoff t to define less abundant species must be non-negative integer!")
if (is.numeric(conf) == FALSE || conf > 1 || conf < 0)
stop("Error: confidence level must be a numerical value between 0 and 1, e.g. 0.95")
if (is.matrix(data) == T || is.data.frame(data) == T){
if (ncol(data) != 1 & nrow(data) != 1)
stop("Error: The data format is wrong.")
if (ncol(data) == 1){
data <- data[, 1]
} else {
data <- data[1, ]
}
}
data <- as.numeric(round(data))
if (datatype == "abundance"){
f <- function(i, data){length(data[which(data == i)])}
if (f(1, data) == sum(data)){
stop("Error: The information of data is not enough.")}
if (detail == T) basicAbuncat(data, k)
SpeciesAbundance(data, method = method, k = k, conf = conf)
} else {
dat <- data[-1]; Q <- function(i, data){length(data[which(data == i)])}
if (Q(1, dat) == sum(dat)){
stop("Error: The information of data is not enough.")}
if (detail == T) basicIncicat(data, k)
SpeciesIncidence(data, method = method, k = k, conf = conf)
}
}
ChaoSpeciesOnline(Birds, "abundance", c("Chao", "CE"))
method
method == Null
method == null
is.null(method)
sum(is.null(method))
sum(is.null(method)) != 0
ChaoSpeciesOnline <-
function(data, datatype = c("abundance", "incidence"), method = c("all", "Homogeneous", "Chao", "CE", "Jackknife"),
k = 10, conf = 0.95, detail = TRUE){
if (sum(is.null(method)) != 0)
stop("Error: You havn't choose the method!")
#method <- match.arg(method, several.ok=T)
if (k != round(k) || k < 0)
stop("Error: The cutoff t to define less abundant species must be non-negative integer!")
if (is.numeric(conf) == FALSE || conf > 1 || conf < 0)
stop("Error: confidence level must be a numerical value between 0 and 1, e.g. 0.95")
if (is.matrix(data) == T || is.data.frame(data) == T){
if (ncol(data) != 1 & nrow(data) != 1)
stop("Error: The data format is wrong.")
if (ncol(data) == 1){
data <- data[, 1]
} else {
data <- data[1, ]
}
}
data <- as.numeric(round(data))
if (datatype == "abundance"){
f <- function(i, data){length(data[which(data == i)])}
if (f(1, data) == sum(data)){
stop("Error: The information of data is not enough.")}
if (detail == T) basicAbuncat(data, k)
SpeciesAbundance(data, method = method, k = k, conf = conf)
} else {
dat <- data[-1]; Q <- function(i, data){length(data[which(data == i)])}
if (Q(1, dat) == sum(dat)){
stop("Error: The information of data is not enough.")}
if (detail == T) basicIncicat(data, k)
SpeciesIncidence(data, method = method, k = k, conf = conf)
}
}
ChaoSpeciesOnline(Birds, "abundance", c("Chao", "CE"))
ChaoSpeciesOnline(Birds, "abundance")
ChaoSpeciesOnline <-
function(data, datatype = c("abundance", "incidence"), method = c("all", "Homogeneous", "Chao", "CE", "Jackknife"),
k = 10, conf = 0.95, detail = TRUE){
if (sum(is.null(method)) != 0)
stop("Error: You haven't chosen the estimated method!")
#method <- match.arg(method, several.ok=T)
if (k != round(k) || k < 0)
stop("Error: The cutoff t to define less abundant species must be non-negative integer!")
if (is.numeric(conf) == FALSE || conf > 1 || conf < 0)
stop("Error: confidence level must be a numerical value between 0 and 1, e.g. 0.95")
if (is.matrix(data) == T || is.data.frame(data) == T){
if (ncol(data) != 1 & nrow(data) != 1)
stop("Error: The data format is wrong.")
if (ncol(data) == 1){
data <- data[, 1]
} else {
data <- data[1, ]
}
}
data <- as.numeric(round(data))
if (datatype == "abundance"){
f <- function(i, data){length(data[which(data == i)])}
if (f(1, data) == sum(data)){
stop("Error: The information of data is not enough.")}
if (detail == T) basicAbun(data, k)
SpeciesAbundance(data, method = method, k = k, conf = conf)
} else {
dat <- data[-1]; Q <- function(i, data){length(data[which(data == i)])}
if (Q(1, dat) == sum(dat)){
stop("Error: The information of data is not enough.")}
if (detail == T) basicInci(data, k)
SpeciesIncidence(data, method = method, k = k, conf = conf)
}
}
ChaoSpeciesOnline(Birds, "abundance")
basicAbun <- function(data, k){
data <- as.numeric(data)
x <- data[which(data != 0)]
n <- sum(x)
D <- length(x)
n_rare <- sum(x[which(x <= k)])
D_rare <- length(x[which(x <= k)])
if (n_rare != 0){
C_rare <- 1 - f(1, x)/n_rare
} else {
C_rare = 1
}
n_abun <- n - n_rare
D_abun <- length(x[which(x > k)])
j <- c(1:k)
f <- function(i, data){length(data[which(data == i)])}
a1 <- sum(sapply(j, function(j)j*(j - 1)*f(j, x)))
a2 <- sum(sapply(j, function(j)j*f(j, x)))
if (C_rare != 0){
gamma_rare_hat_square <- max(D_rare/C_rare*a1/a2/(a2 - 1) - 1, 0)
gamma_rare_1_square <- max(gamma_rare_hat_square*(1 + (1 - C_rare)/C_rare*a1/(a2 - 1)), 0)
}else{
gamma_rare_hat_square <- 0
gamma_rare_1_square <- 0
}
CV_rare <- sqrt(gamma_rare_hat_square)
CV1_rare <- sqrt(gamma_rare_1_square)
BASIC.DATA <- matrix(paste(c("n", "D", "k", "n_rare", "D_rare", "C_rare", "CV_rare", "CV1_rare", "n_abun", "D_abun"),
round(c(n, D, k, n_rare, D_rare, C_rare, CV_rare, CV1_rare, n_abun, D_abun),3),
sep = "="), ncol = 1)
colnames(BASIC.DATA) <- c("Value")
rownames(BASIC.DATA) <- c("Number of observed individuals", "Number of observed species","Cut-off point",
"Number of observed in dividuals for rare species", "Number of observed species for rare species",
"Estimation of the sample converage for rare species",
"Estimation of CV for rare species in ACE", "Estimation of CV1 for rare species in ACE-1",
"Number of observed individuals for abundant species", "Number of observed species for abundant species")
BASIC.DATA <- data.frame(BASIC.DATA)
return(list(BASIC.DATA, n, D, n_rare, D_rare, C_rare, CV_rare, CV1_rare, n_abun, D_abun))
}
ChaoSpeciesOnline(Birds, "abundance")
ChaoSpeciesOnline(Birds, "abundance", detail = T)
basicAbun(data, k)
basicAbun(data, k)[[1]]
data
n
data <- t(Birds)
data <- as.numeric(data)
x <- data[which(data != 0)]
n <- sum(x)
D <- length(x)
n_rare <- sum(x[which(x <= k)])
D_rare <- length(x[which(x <= k)])
if (n_rare != 0){
C_rare <- 1 - f(1, x)/n_rare
} else {
C_rare = 1
}
n_abun <- n - n_rare
D_abun <- length(x[which(x > k)])
j <- c(1:k)
f <- function(i, data){length(data[which(data == i)])}
a1 <- sum(sapply(j, function(j)j*(j - 1)*f(j, x)))
a2 <- sum(sapply(j, function(j)j*f(j, x)))
if (C_rare != 0){
gamma_rare_hat_square <- max(D_rare/C_rare*a1/a2/(a2 - 1) - 1, 0)
gamma_rare_1_square <- max(gamma_rare_hat_square*(1 + (1 - C_rare)/C_rare*a1/(a2 - 1)), 0)
}else{
gamma_rare_hat_square <- 0
gamma_rare_1_square <- 0
}
CV_rare <- sqrt(gamma_rare_hat_square)
CV1_rare <- sqrt(gamma_rare_1_square)
n
D
